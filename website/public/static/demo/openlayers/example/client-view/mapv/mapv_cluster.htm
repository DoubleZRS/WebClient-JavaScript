<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>聚类图</title>
  <script include="mapv" src="./static/libs/include-openlayers-local.js"></script>
  <style>
    #map {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
    }
  </style>
</head>

<body>
  <div id="map"></div>
  <script>
    var map = new ol.Map({
      //地图容器div的ID
      target: 'map',
      //地图容器中加载的图层
      layers: [],
      //地图视图设置
      view: new ol.View({
        //地图初始中心点
        center: ol.proj.fromLonLat([110, 30]),
        //地图初始显示级别
        zoom: 2,
        //最小级别
        minZoom: 1,
        //最大级别
        maxZoom: 12
      })
    });

    map.addLayer(new ol.layer.Tile({
      source: new ol.source.TileImage({
        url: 'https://api.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}.png?access_token=' +
          'sk.eyJ1IjoiY2hlbmdkYWRhIiwiYSI6ImNqZDFjaGo0ZjFzcnoyeG54enoxdnNuZHUifQ.hTWXXBUQ0wdGeuDF3GWeUw'
      })
    }))

    var randomCount = 10000;

    var data = [];

    var citys = ["北京", "天津", "上海", "重庆", "石家庄", "太原", "呼和浩特", "哈尔滨", "长春", "沈阳", "济南", "南京", "合肥", "杭州", "南昌", "福州",
      "郑州", "武汉", "长沙", "广州", "南宁", "西安", "银川", "兰州", "西宁", "乌鲁木齐", "成都", "贵阳", "昆明", "拉萨", "海口"
    ];

    // 构造数据
    while (randomCount--) {
      var cityCenter = mapv.utilCityCenter.getCenterByCityName(citys[parseInt(Math.random() * citys.length)]);
      data.push({
        geometry: {
          type: 'Point',
          coordinates: ol.proj.transform([cityCenter.lng, cityCenter.lat], 'EPSG:4326', 'EPSG:3857')
        }
      });
    }

    var citys = ["北京","天津","上海","重庆","石家庄","太原","呼和浩特","哈尔滨","长春","沈阳","济南","南京","合肥","杭州","南昌","福州","郑州","武汉","长沙","广州","南宁","西安","银川","兰州","西宁","乌鲁木齐","成都","贵阳","昆明","拉萨","海口"];

        // 构造数据
        while (randomCount--) {
            var cityCenter = mapv.utilCityCenter.getCenterByCityName(citys[parseInt(Math.random() * citys.length)]);
            data.push({
                geometry: {
                    type: 'Point',
                    coordinates: ol.proj.transform([cityCenter.lng, cityCenter.lat], 'EPSG:4326', 'EPSG:3857') 
                }
            });
        }

    var dataSet = new mapv.DataSet(data);

    var mapVOptions = {
      // shadowColor: 'rgba(255, 250, 50, 1)',
      // shadowBlur: 10,
      fillStyle: 'rgba(255, 50, 0, 1.0)', // 非聚合点的颜色
      size: 5, // 非聚合点的半径
      minSize: 8, // 聚合点最小半径
      maxSize: 31, // 聚合点最大半径
      globalAlpha: 0.8, // 透明度
      clusterRadius: 150, // 聚合像素半径
      maxZoom: 19, // 最大显示级别
      label: { // 聚合文本样式
        show: true, // 是否显示
        fillStyle: 'white',
        shadowColor: 'yellow',
        font: '20px Arial',
        shadowBlur: 10,
      },
      gradient: {
        0: "blue",
        0.5: 'yellow',
        1.0: "rgb(255,0,0)"
      }, // 聚合图标渐变色
      draw: 'cluster'
    }
    map.addLayer(
      new ol.layer.Image({
        source: new ol.source.Mapv({
          map: map,
          dataSet: dataSet,
          mapVOptions: mapVOptions
        })
      })
    );
  </script>


</body>

</html>