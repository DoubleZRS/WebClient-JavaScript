<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta charset='utf-8' />
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <title>动态剖切</title>
    <!--引入第三方的jquery脚本库-->
    <script include="jquery" src="./static/libs/include-lib-local.js"></script>
    <script src="./static/libs/include-cesium-local.js"></script>
    <style type='text/css'>
        #GlobeView {
            width: 100%;
            height: 100%;
            position: absolute;
        }
    </style>
    <script>
        //在JS脚本开发中使用严格模式，及时捕获一些可能导致编程错误的ECMAScript行为
        'use strict';
        //定义三维视图的主要类
        var webGlobe;
        //定义三维瓦片类
        var tileset;
        var dynaCut;
        var planetEntity;
        var distance = 21;
        function init() {
            //构造三维视图类（视图容器div的id，三维视图设置参数）
            webGlobe = new Cesium.WebSceneControl('GlobeView', {
            });
            if (webGlobe) {
                //加载谷歌矢量底图
                webGlobe.appendGoogleMap('m@207000000');
                //加载IGS发布的M3D缓存地图文档
                tileset = webGlobe.append('http://develop.smaryun.com:6163/igs/rest/g3d/ModelM3D', {
                    autoReset: false,
                    loaded: function (layer) {
                        DynamicCutting();
                    }
                });
                webGlobe.flyToEx(0.0007, -0.002, {
                    height: 200,
                    heading: 0,
                    pitch: -30
                });
            }
        }

        function DynamicCutting() {
            //进行剖切分析的面，从上往下切，Cesium.Cartesian3中第一个参数是左右，第二个参数是前后，第三个参数是上下
            var plane = new Cesium.ClippingPlane(new Cesium.Cartesian3(0.0, 0.0, -1.0), -500.0)
            //创建剖切对象
            dynaCut = webGlobe.createDynamicCutting(tileset, [plane], { color: new Cesium.Color(0.0, 1.0, 1.0, 0.3) });
            //获取剖切切面
            planetEntity = dynaCut.planes[0];
            //设置切面回调函数
            planetEntity.plane.plane = new Cesium.CallbackProperty(function (date) {
                //设置剖切面距离
                plane.distance = distance;
                return Cesium.Plane.transform(plane, tileset[0].modelMatrix, new Cesium.ClippingPlane(Cesium.Cartesian3.UNIT_X, 0.0));
            }, false);
        }

        function change() {
            distance = Number(document.getElementById('range').value);
        }
    </script>
</head>

<body onload="init()">
    <div id="GlobeView">
        <div style="position:absolute;z-index:9999">
            <span>剖切距离：</span>
            <input type="range" id="range" min="0" max="22" value="21" oninput="change()" />
        </div>
    </div>
</body>

</html>