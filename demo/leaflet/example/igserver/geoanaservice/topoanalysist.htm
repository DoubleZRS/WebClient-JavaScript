<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>拓扑分析</title>
    <link href="../../css/leaflet/style.css" rel="stylesheet" type="text/css"/>
    <script src="../../libs/zondyclient/include-leaflet-local.js"></script>
    <script type="text/javascript">
        //使用严格模式
        "use strict";
        //定义地图文档图层和地图
        var vectorLayer, map;
        /**初始化加载地图和拓扑图形
         */
        function init() {
            //地图容器
            map = L.map('leaf_map', {
                //地图渲染在canvas上
                preferCanvas: true,
                //不添加属性说明控件
                attributionControl: false,
                //添加缩放控件
                zoomControl: true,
                //投影坐标系
                crs: L.CRS.EPSG4326,
                //中心点
                center: [30, 114],
                //最大级数
                maxZoom: 10,
                //最小级数
                minZoom: 0,
                //显示级数
                zoom: 7
            });
            //创建矢量图层
            vectorLayer = new Zondy.Map.MapVectorLayer(["gdbp://MapGisLocal/OpenLayerVecterMap/ds/世界地图经纬度/sfcls/世界政区"], {
                //投影坐标系
                crs: L.CRS.EPSG4326,
                //IP地址
                ip: "develop.smaryun.com",
                //端口号
                port: "6163",
                //只显示一个图层,不平铺显示
                noWrap: true,
                //添加guid，确保图层从IGS中加载，不读取缓存文件
                guid: (new Date()).getTime().toString()
            }).addTo(map);

            //将线几何添加到地图进行显示（非必需，仅仅为了在地图上高亮显示图形）
            var line = L.polyline([[30.60, 114.40], [30.20, 114.45]], {
                color: 'red'
            }).addTo(map);
            //将区几何添加到地图进行显示
            var polbounds = [[30.533613, 114.301586], [30.396517, 114.301586], [30.396517, 114.544453], [30.533613, 114.444453]];
            L.polygon(polbounds, {
                color: "blue",
                weight: 1
            }).addTo(map);
        }

        /**执行拓扑分析
         */
        function TopAnalysis() {
            //创建线几何对象
            var lineObj = new Zondy.Object.GLine(
                new Zondy.Object.AnyLine([new Zondy.Object.Arc
                ([
                    new Zondy.Object.Point2D(114.40, 30.60),
                    new Zondy.Object.Point2D(114.45, 30.20)
                ])
                ])
            );
            //创建区几何对象
            var regionObj = new Zondy.Object.GRegion([
                new Zondy.Object.AnyLine([new Zondy.Object.Arc([
                    new Zondy.Object.Point2D(114.301586, 30.533613),
                    new Zondy.Object.Point2D(114.301586, 30.396517),
                    new Zondy.Object.Point2D(114.544453, 30.396517),
                    new Zondy.Object.Point2D(114.444453, 30.533613),
                    new Zondy.Object.Point2D(114.401586, 30.533613)
                ])
                ])
            ]);
            //初始化TopAnalysis类
            var topService = new Zondy.Service.TopAnalysis({
                //IP地址
                ip: "develop.smaryun.com",
                //端口号
                port: "6163"
            });
            //调用setLine方法，设置线类型
            topService.setLine(lineObj);
            //调用setRelativeObj方法，设置拓扑分析参照物
            topService.setRelativeObj(regionObj);
            //设置拓扑分析半径
            topService.nearDis = "0.05";
            //执行拓扑分析，成功执行后返回执行结果，AnalysisSuccess为回调函数
            topService.execute(AnalysisSuccess);
        }

        /**拓扑分析成功回调函数
         *  @param {json对象} data 获取结果对象
         */
        function AnalysisSuccess(data) {
            //显示结果
            document.getElementById("topResult").value = data;
        }
    </script>
</head>
<body onload="init();">
<div class="ToolLib">
    <input type="button" id="topAnalysisBtn" class="ButtonLib" value="拓扑分析" onclick="TopAnalysis()"/>
    分析结果：<input id="topResult" type="text" disabled="disabled"/>
</div>
<div id="leaf_map" style="width: 100%; height:95%;position: absolute;">
</div>
</body>
</html>
