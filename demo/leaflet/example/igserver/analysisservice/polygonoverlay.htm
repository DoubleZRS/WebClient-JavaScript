<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>多边形叠加分析</title>
    <!--当前页面的样式-->
    <link href="../../css/leaflet/style.css" rel="stylesheet" type="text/css"/>
    <script src="../../libs/zondyclient/include-leaflet-local.js"></script>
    <script type="text/javascript">
        //整个js文件都是严格模式下执行的
        "use strict";

        //定义全局变量 
        var map, layer, resultLayer;
        //缓存结果图层的基地址
        var resultBaseUrl = "gdbp://MapGisLocal/OpenLayerVecterMap/sfcls/";


        /** 地图初始化函数
         */
        //地图初始化函数
        function init() {
            //地图容器
            map = L.map('leaf_map', {
                //参考坐标系，默认是墨卡托坐标系（EPSG3857），EPSG4326为经纬度坐标系
                crs: L.CRS.EPSG4326,
                //显示中心
                center: [0, 0],
                //最小显示等级
                minZoom: 0,
                //最大显示等级
                maxZoom: 10,
                //当前显示等级
                zoom: 1,
                //设置图像范围,
                maxBounds: L.latLngBounds(L.latLng(-180, -180), L.latLng(180, 180))
            });
            //矢量图层
            layer = new Zondy.Map.MapVectorLayer("gdbp://MapGisLocal/OpenLayerVecterMap/ds/世界地图经纬度/sfcls/世界政区", {
                //IGServer所在ip地址
                ip: "develop.smaryun.com",
                //IGServer请求端口号
                port: "6163",
                //设置图层能否重复显示。true代表显示唯一，false代表显示重复。
                noWrap: true,
                //设置地图的索引号
                mapIndex: 0,
                //缓存名称
                guid: (new Date()).getTime().toString()
            }).addTo(map);
        }

        /** 执行多边形叠加分析
         */
        function OverlayByPolyAnalysis() {
            //清除客户端分析结果
            clearA();
            //显示进度条
            startPressBar();
            //显示结果的图层名称
            var resultname = resultBaseUrl + "overLayByPolyAnalysisResultLayer" + getCurentTime();
            //设置叠加空间几何信息
            var geoRegion = new Zondy.Object.GRegion([
                new Zondy.Object.AnyLine([new Zondy.Object.Arc([
                    new Zondy.Object.Point2D(114, 30),
                    new Zondy.Object.Point2D(25, 49),
                    new Zondy.Object.Point2D(53, 17),
                    new Zondy.Object.Point2D(44, 30.36),
                    new Zondy.Object.Point2D(114, 30)
                ], 0)])
            ], 0);
            //实例化OverlayByPolygon类
            var overlayParam = new Zondy.Service.OverlayByPolygon({
                //IGServer所在ip地址
                ip: "develop.smaryun.com",
                //IGServer请求端口号
                port: "6163",
                //设置被叠加图层URL 
                srcInfo1: "gdbp://MapGisLocal/OpenLayerVecterMap/ds/世界地图经纬度/sfcls/世界政区",
                //设置结果URL  		
                desInfo: resultname,
                //设置多边形坐标序列化对象 	
                strGRegionXML: JSON.stringify(geoRegion),
                //多边形字符串输入格式	 
                inFormat: "json",
                //设置结果图层的图形参数信息		
                infoOptType: 2,
                //求交		
                overType: 1,
                //允许重算面积		    
                isReCalculate: true,
                //容差半径		
                radius: 0.05
            });
            //调用基类的execute方法，执行叠加分析， onSuccess为结果回调函数
            overlayParam.execute(AnalysisSuccess, "post", false, "json", AnalysisError);
        }

        /** 分析失败回调
         */
        function AnalysisError(e) {
            //停止进度条
            stopPressBar();
        }

        /** 分析成功后的回调
         */
        function AnalysisSuccess(data) {
            //停止进度条
            stopPressBar();
            if (!data.succeed || data.results === null) {
                alert("多边形叠加分析失败，请检查参数！");
            } else {
                if (data.results.length !== 0) {
                    var resultLayerUrl = data.results[0].Value;
                    //将结果图层添加到地图视图中显示
                    resultLayer = new Zondy.Map.MapVectorLayer(encodeURIComponent(resultBaseUrl + resultLayerUrl), {
                        //IGServer所在ip地址
                        ip: "develop.smaryun.com",
                        //IGServer请求端口号
                        port: "6163",
                        //设置图层能否重复显示。true代表显示唯一，false代表显示重复。
                        noWrap: true,
                        //设置地图的索引号
                        mapIndex: 10,
                        //缓存名称
                        guid: (new Date()).getTime().toString()
                    }).addTo(map);
                }
            }
        }

        /** 清除客户端分析结果信息
         */
        function clearA() {
            //停止进度条
            stopPressBar();
            //清除缓冲区的图层
            if (resultLayer !== undefined) {
                resultLayer.remove();
            }
        }

        /** 当前日期加时间(如:2009-06-12-120000)
         */
        function getCurentTime() {
            var now = new Date();
            //获取当前年份
            var year = now.getFullYear();
            //获取当前月份     
            var month = now.getMonth() + 1;
            //获取当前日期   
            var day = now.getDate();
            //获取当前时刻
            var hh = now.getHours();
            //获取当前分钟
            var mm = now.getMinutes();
            //获取当前秒钟
            var ss = now.getSeconds();
            //将当前的日期拼串
            var clock = year + "-";
            if (month < 10)
                clock += "0";
            clock += month + "-";
            if (day < 10)
                clock += "0";
            clock += day + "-";
            if (hh < 10)
                clock += "0";
            clock += hh;
            if (mm < 10) clock += '0';
            clock += mm;
            if (ss < 10) clock += '0';
            clock += ss;
            return (clock);
        }

        /** 停止进度条
         */
        function stopPressBar() {
            document.getElementById('preview').style.display = "none";
        }

        /** 开始进度条动画
         */
        function startPressBar() {
            document.getElementById('preview').style.display = "";
        }
    </script>
</head>

<body onload="init()">
<div id="preview" style="display: none; text-align: center; padding-top: 250px; font-weight: bold">
    <img src="../../img/common/39-1.gif" alt=''/>
    <br/>
    <br/>
    <span>正在执行叠加分析，请稍候</span>
</div>
<div class="ToolLib">
    <input type="button" class="ButtonLib" value="多边形叠加分析" onclick="OverlayByPolyAnalysis()"/>
    <input type="button" class="ButtonLib" value="清除结果" onclick="clearA()"/>
</div>
<div id="leaf_map" style="width: 100%; height: 90%; position: absolute">
</div>
</body>

</html>