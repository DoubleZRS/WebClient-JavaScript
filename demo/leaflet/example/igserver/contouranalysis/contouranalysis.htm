<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>等值线分析</title>
    <link href="../../css/leaflet/style.css" rel="stylesheet" type="text/css"/>
    <script include="jquery" src="../../libs/zondyclient/include-lib-local.js"></script>
    <script include="json" src="../../libs/zondyclient/include-leaflet-local.js"></script>
    <script type="text/javascript">
        //整个js文件都是严格模式下执行的
        "use strict";

        //定义全局变量
        var map, vectorMapdoc, drawLayer;
        //定义一个对象
        var obj;
        //根据当前时间生成的时间值，用于标志不同的简单要素类
        var time = null;
        //简单要素类的地址
        var GdbpTempStr = null;
        //区简单要素类
        var wp = null;
        //线简单要素类
        var wl = null;
        //点简单要素类
        var wt = null;

        /** 地图初始化函数
         */
        function init() {
            //地图容器
            map = L.map('map_leaf', {
                //参考坐标系，默认是墨卡托坐标系（EPSG3857），EPSG4326为经纬度坐标系
                crs: L.CRS.EPSG3857,
                //显示中心
                center: [10, 100],
                //当前显示等级
                zoom: 3,
                //限制显示地理范围
                maxBounds: L.latLngBounds(L.latLng(-180, -180), L.latLng(180, 180))
            });
            //矢量地图文档
            vectorMapdoc = new Zondy.Map.MapDocLayer("WorldMKTVector", {
                //IGServer所在ip地址
                ip: "develop.smaryun.com",
                //IGServer请求端口号
                port: "6163",
                //设置图层能否重复显示。true代表显示唯一，false代表显示重复。
                noWrap: true,
                //缓存名称
                guid: (new Date()).getTime().toString()
            }).addTo(map);
        }

        /** 等值线分析
         */
        function contourAnalyseBtn() {
            //显示进度条
            startPressBar();
            var myDate = new Date();
            //定义起始和终点，中间有5条，生成步长t
            var t = parseInt((300 - 0) / 5 + 0.5);
            //获取系统时间
            time = getTime(myDate);
            //临时存储的地址
            GdbpTempStr = "gdbp://MapGisLocal/OpenLayerVecterMap/ds/ContourAnalyse/";
            wp = GdbpTempStr + "sfcls/ContourP_" + time;
            wl = GdbpTempStr + "sfcls/ContourL_" + time;
            wt = GdbpTempStr + "acls/ContourT_" + time;
            var layerName = "gdbp://MapGisLocal/OpenLayerVecterMap/ds/ContourAnalyse/sfcls/离散点";
            //创建一个离散数据网格化参数类
            var mp = new Zondy.Object.ContourAnalyse.MeshingParam({
                SfClsURL: layerName,
                FieldName: "Rainfall",
                XCellNum: 400,
                Bound: null
            });
            var mpStr = JSON.stringify(mp);
            //创建一个平面等值线追踪所用到的注记参数类
            var cp = new Zondy.Object.ContourAnalyse.ContourParam();
            //等值线层参数
            var zValues = new Array();
            //循环描述等值线信息
            for (var i = 0; i < t; i++) {
                //等值线层参数类，用来描述每一层的信息
                var z = new Zondy.Object.ContourAnalyse.ContourZValue();
                //等值线层值
                z.ZValue = i * 5;
                //等值线参数
                z.LineInfo = new Zondy.Object.ContourAnalyse.SlopLineParam();
                z.LineInfo.Color = i * parseInt(5) + 9;
                z.LineInfo.LinStyleID = 1;
                z.LineInfo.LinWidth = 0.02;
                //生成区参数
                z.RegInfo = new Zondy.Object.ContourAnalyse.ContourRegionInfo();
                z.RegInfo.FillColor = i * parseInt(5) + 4;
                z.RegInfo.FillMode = 0;
                z.RegInfo.PatID = 0;
                //该层是否绘制注记
                z.IsOutputNote = true;
                zValues.push(z);
            }
            //等值线层参数
            cp.ZValues = zValues;
            //平面等值线追踪所用到的注记参数类
            var noteParam = new Zondy.Object.ContourAnalyse.ContourNoteParam();
            //注记间最小允许距离
            noteParam.MinDist = 10;
            //注记尺寸
            noteParam.FixSize = 0.01;
            //注记生成参数。默认值为NULL，只有在IsMakeNote为true时该参数才能发挥作用。
            cp.NoteParam = noteParam;
            //示坡线参数。默认值为NULL，只有在IsMakeSLin为true时该参数参能发挥作用。
            var slopLineParam = new Zondy.Object.ContourAnalyse.SlopLineParam();
            cp.SlopLineParam = slopLineParam;
            //是否生成注记
            cp.IsMakeNote = true;
            //是否生成区
            cp.IsMakeReg = true;
            var cpStr = JSON.stringify(cp);
            //实例化对象信息
            obj = {
                "linSfclsURL": wl,
                "regSfclsURL": wp,
                "annoClsURL": wt,
                "meshingParam": mpStr,
                "contourParam": cpStr
            };
            var param = [{"Key": "linSfclsURL", "Value": obj.linSfclsURL},
                {"Key": "regSfclsURL", "Value": obj.regSfclsURL},
                {"Key": "annoClsURL", "Value": obj.annoClsURL},
                //离散数据网格化参数类
                {"Key": "meshingParam", "Value": obj.meshingParam},
                //平面等值线追踪参数类
                {"Key": "contourParam", "Value": obj.contourParam}];
            ExecuteFlow("600320", param);
        }
        /** 执行分析
         *workFlowID工作流ID,param传递的参数集
         */
        function ExecuteFlow(workFlowID, param) {
            var urlStr = "http://develop.smaryun.com:6163/igs/rest/mrfws/execute/" + workFlowID + "?f=json";
            var service = new Zondy.Service.QueryServiceBase();
            service.restQuery(urlStr, param, onContourAnalyse, "POST");
        }

        /**回调函数，处理显示结果信息
         *@param(json对象)data获取结果对象
         */
        function onContourAnalyse(data) {
            //停止进度条
            stopPressBar();
            if (data != null && data.results != null && data.results[0].Value == '0') {
                //初始化矢量图层对象
                var vectorLayer = new Zondy.Map.MapVectorLayer(obj.linSfclsURL, {
                    //IGServer所在ip地址
                    ip: "develop.smaryun.com",
                    //IGServer请求端口号
                    port: "6163",
                    //图层能否重复显示设置。true代表显示唯一，false代表显示重复。
                    noWrap: true
                }).addTo(map);
                var vectorArea = new Zondy.Map.MapVectorLayer(obj.regSfclsURL, {
                    //IGServer所在ip地址
                    ip: "develop.smaryun.com",
                    //IGServer请求端口号
                    port: "6163",
                    //图层能否重复显示设置。true代表显示唯一，false代表显示重复。
                    noWrap: true
                }).addTo(map);
            }
        }

        //停止进度条
        function stopPressBar() {
            document.getElementById('preview').style.display = "none";
        }
        //开始进度条动画
        function startPressBar() {
            document.getElementById('preview').style.display = "";
        }
        //获取系统的时间
        function getTime(myDate) {
            var year = myDate.getFullYear();
            var systime = year;
            var month = myDate.getMonth() + 1;
            if (month < 10)
                systime += "0";
            systime += "" + month;
            var day = myDate.getDate();
            if (day < 10)
                systime += "0";
            systime += "" + day;
            var hh = myDate.getHours();
            if (hh < 10)
                systime += "0";
            systime += "" + hh;
            var mm = myDate.getMinutes();
            if (mm < 10)
                systime += "0";
            systime += "" + mm;
            var ss = myDate.getSeconds();
            if (ss < 10)
                systime += "0";
            systime += "" + ss;
            return systime;
        }
    </script>
</head>
<body onload="init()">
<div id="preview" style="display: none; text-align: center; padding-top: 250px; font-weight: bold">
    <img src="../../img/common/39-1.gif" alt=''/><br/>
    <br/>
    <span>正在生成等值线，请稍候</span>
</div>
<div class="ToolLib">
    <input type="button" class="ButtonLib" value="执行等值线分析" onclick="contourAnalyseBtn()"/>
</div>
<div id="map_leaf" style="width: 100%; height: 700px;">
</div>
</body>
</html>
