<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>导出成图片</title>
    <script include="filesaver,draw,domtoimage" src="../../libs/zondyclient/include-leaflet-local.js"></script>
    <style>
        body {
            height: 700px;
        }
    </style>
    <script type="text/javascript">
        //定义地图
        var map;
        var extent = {}; //地图范围
        var scale; //比例尺
        var extent_km = 111.319490793274; //在经线上，相差一纬度约111km 
        var extent_km_lat; //在纬线上，相差一经度约111cosα（α该纬线纬度），1KM就是该纬线应约1/(111*cosα)=0.009cosα度，度数纬度关，这样就是1公里对应的纬线度数。
        /**
         * 初始化地图显示
         */
        function init() {
            //地图容器
            map = L.map('leaf_map', {
                //参考坐标系
                crs: L.CRS.EPSG3857,
                //显示中心
                center: [40, 116.3],
                //最小显示等级
                minZoom: 0,
                //最大显示等级
                maxZoom: 16,
                //当前显示等级
                zoom: 12
            });
            //加载瓦片图层数据（OSM）
            var tiles = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                //只显示一个图层,不平铺显示
                noWrap: true
            }).addTo(map);

            //添加绘制图层
            var drawnItems = new L.FeatureGroup();
            map.addLayer(drawnItems);
            //添加绘制控件
            var drawControl = new L.Control.Draw({
                draw: {
                    //绘制线
                    polyline: false,
                    //绘制多边形
                    polygon: false,
                    //绘制矩形
                    rectangle: true,
                    //绘制圆
                    circle: false,
                    //绘制标注
                    marker: false,
                    //绘制圆形标注
                    circlemarker: false
                }
            });
            //添加绘制控件
            map.addControl(drawControl);
            //绘制事件
            map.on(L.Draw.Event.CREATED, function (e) {
                var width_extent_map = 9;
                var height_extent_map = 10;

                var width_extent_layer = 7;
                var height_extent_layer = 8;

                var bounds = e.layer._bounds;
                //地图边框，已放入绘制接口(dom-to-image)中绘制
                //                var Rectangle = L.rectangle(bounds, {
                //                    color: '#000',
                //                    weight: 1,
                //                    fillColor: 'rgba(255, 255, 255, 0)'
                //                }).addTo(map);
                //                Rectangle.name = "MapFrame";
                extent.xmin = bounds._southWest.lng;
                extent.ymin = bounds._southWest.lat;
                extent.xmax = bounds._northEast.lng;
                extent.ymax = bounds._northEast.lat;

                getRecommendScale();

                var a1 = map.options.crs.latLngToPoint(L.latLng(bounds._northEast.lat, bounds._southWest.lng),
                    map.getZoom()); //左上
                var a4 = map.options.crs.latLngToPoint(L.latLng(bounds._southWest.lat, bounds._northEast.lng),
                    map.getZoom()); //右下
                var mapBounds = map.getBounds();

                var mapLeftTopPoint = map.options.crs.latLngToPoint(L.latLng(mapBounds._northEast.lat,
                    mapBounds._southWest.lng), map.getZoom());
                var startPointX = mapLeftTopPoint.x - a1.x - 7; //得到一个负数
                var startPointY = mapLeftTopPoint.y - a1.y - 7; //得到一个负数

                var mapParams = {};
                mapParams.width = parseInt(a4.x - mapLeftTopPoint.x + width_extent_map);  //
                mapParams.height = parseInt(a4.y - mapLeftTopPoint.y + height_extent_map);
                mapParams.startPointX = startPointX; // ?
                mapParams.startPointY = startPointY; // ?

                var layExtent = layoutSetting();  //获取根据比例尺调整后的版面范围
                var b1 = map.options.crs.latLngToPoint(L.latLng(layExtent.ymax, layExtent.xmin), map.getZoom()); //左上
                var b4 = map.options.crs.latLngToPoint(L.latLng(layExtent.ymin, layExtent.xmax), map.getZoom()); //右下
                var laystartPointX = mapLeftTopPoint.x - b1.x - 9;
                var laystartPointY = mapLeftTopPoint.y - b1.y - 9;

                var layParams = {};
                layParams.width = parseInt(b4.x - mapLeftTopPoint.x + width_extent_layer); //输出地图版面宽
                layParams.height = parseInt(b4.y - mapLeftTopPoint.y + height_extent_layer); //输出地图版面高
                layParams.startPointX = laystartPointX; //输出地图版面的x像素坐标
                layParams.startPointY = laystartPointY; //输出地图版面的y像素坐标

                //以下参数都是在有layParams的前提下,位置已设置为固定
                var mapFrameStyleParams = {};
                mapFrameStyleParams.strokeStyle = "black"; //图像的边框线颜色
                mapFrameStyleParams.lineWidth = 2;

                var titleParams = {};
                titleParams.font = '30px 微软雅黑';
                titleParams.textAlign = 'center';
                titleParams.textBaseline = 'bottom';
                titleParams.text = '地图标题';

                var leftTextParams = {};
                leftTextParams.font = '15px 微软雅黑';
                leftTextParams.textAlign = 'left';
                leftTextParams.textBaseline = 'top';
                leftTextParams.text = '左下角文字';

                var rightTextParams = {};
                rightTextParams.font = '15px 微软雅黑';
                rightTextParams.textAlign = 'right';
                rightTextParams.textBaseline = 'top';
                rightTextParams.text = '右下角文字';

                //width和height为必须参数，其他参数为可选参数(扩展参数)
                console.log(mapParams, layParams)
                domtoimage.toPng(map.getContainer(), {
                    width: mapParams.width, //输出地图内容的宽
                    height: mapParams.height, //输出地图内容的高
                    startPointX: mapParams.startPointX, //输出地图内容左上角x像素坐标
                    startPointY: mapParams.startPointY, //输出地图内容左上角y像素坐标
                    layParams: layParams, //输出版面参数
                    mapFrameStyleParams: mapFrameStyleParams, //图框参数
                    titleParams: titleParams, //标题参数
                    leftTextParams: leftTextParams, //左下角文字参数
                    rightTextParams: rightTextParams //右下角文字参数
                }).then(function (dataUrl) {
                    var blob = _dataURItoBlob(dataUrl);
                    saveAs(blob, 'map.png');
                });
            });
        }

        /**
         * 将获取的图片路径转成blob
         * @param dataURI
         * @returns {*}
         * @private
         */
        function _dataURItoBlob(dataURI) {
            var byteString = atob(dataURI.split(',')[1]);
            var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
            var ab = new ArrayBuffer(byteString.length);
            var dw = new DataView(ab);
            for (var i = 0; i < byteString.length; i++) {
                dw.setUint8(i, byteString.charCodeAt(i));
            }
            return new Blob([ab], {
                type: mimeString
            });
        }

        /**
         * 获取建议的比例尺，比例尺也可以自己设置
         */
        function getRecommendScale() {
            var x_min = extent.xmin;
            var y_min = extent.ymin;
            var x_max = extent.xmax;
            var y_max = extent.ymax;
            var map_width = (x_max - x_min) * extent_km * 1000 * 1000;  //宽度  从 度单位 换算成 毫米单位
            var map_height = (y_max - y_min) * extent_km * 1000 * 1000; //高度  从 度单位 换算成 毫米单位
            var paper_width = 297; //纸张宽度,默认为横版A4大小 毫米
            var paper_height = 210;//纸张高度,默认为横版A4大小 毫米
            var r_scale = (map_width / paper_width) > (map_height / paper_height) ? Math.ceil(map_width / paper_width) :
                Math.ceil(map_height / paper_height);
            var log10 = r_scale.toString().length - 1;
            var pow10 = Math.pow(10, log10);
            scale = Math.ceil(r_scale / pow10) * pow10; //直接使用推荐的比例尺
            console.log(r_scale, log10, pow10, scale); //66400 4 10000 70000
        }

        /**
         * 获取输出版面坐标范围，默认以横版A4大小输出
         * @returns {{}}
         */
        function layoutSetting() {
            var x_min = extent.xmin;
            var y_min = extent.ymin;
            var x_max = extent.xmax;
            var y_max = extent.ymax;
            //地图实际宽度
            var map_width = (x_max - x_min) * extent_km * 1000 * 1000;
            //地图实际高度
            var map_height = (y_max - y_min) * extent_km * 1000 * 1000;
            //纸张宽度,默认为横版A4大小
            var paper_width = 297;
            //纸张高度,默认为横版A4大小
            var paper_height = 210;
            //根据比例尺调整后的地图宽度(mm)
            var scale_map_width = Math.round(map_width / scale);
            //根据比例尺调整后的地图高度(mm)
            var scale_map_height = Math.round(map_height / scale);
            
            //纸张与地图的宽度差值
            var differ_width_val = (paper_width - scale_map_width) / 2;
            //纸张与地图的高度差值
            var differ_height_val = (paper_height - scale_map_height) / 2;

            console.log(scale_map_width, scale_map_height)  //289 178

            var differ_x_extent = differ_width_val * scale / 1000 / 1000 / this.extent_km;  //毫米 换算成 度
            var differ_y_extent = differ_height_val * scale / 1000 / 1000 / this.extent_km; //毫米 换算成 度
            //版面的左上角x坐标
            var layout_l_x = x_min - differ_x_extent;
            //版面的左上角y坐标
            var layout_l_y = y_max + differ_y_extent;
            //版面的右下角x坐标
            var layout_r_x = x_max + differ_x_extent;
            //版面的右下角y坐标
            var layout_r_y = y_min - differ_y_extent;

            //输出版面范围
            //            var bounds = [[layout_l_y, layout_l_x], [layout_r_y, layout_r_x]];
            //            var Rectangle = L.rectangle(bounds, {
            //                color: '#ffcc33',
            //                weight: 2,
            //                fillColor: 'rgba(255, 255, 255, 0)'
            //            });
            //            Rectangle.name = "layoutSetting";
            //            Rectangle.addTo(map);
            var layExtent = {};
            layExtent.xmin = layout_l_x;
            layExtent.ymin = layout_r_y;
            layExtent.xmax = layout_r_x;
            layExtent.ymax = layout_l_y;
            return layExtent;
        }
    </script>
</head>

<body onload="init()">
    <div id="leaf_map" style="width: 100%; height: 95%;position: absolute">
    </div>
</body>

</html>